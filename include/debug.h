/**
 * @brief デバッグ機能
 * 
 * @file debug.h
 */
#ifndef __DEBUG_H__
#define __DEBUG_H__

/************************************************************************************************/
/*	定義値																						*/
/************************************************************************************************/

/************************************************************************************************/
/*	構造体定義																					*/
/************************************************************************************************/

/************************************************************************************************/
/*	関数プロトタイプ宣言																		*/
/************************************************************************************************/

/**
 * @brief	デバッグ出力
 * @note	printfラッパー
 *
 * @param[in]	出力文字列
 */
void debug_printf(const char *format, ...);

/************************************************************************************************/
/*	マクロ																						*/
/************************************************************************************************/
/** @def
 * エラー出力マクロ
 */
#define M_DEBUG_ERROR(classId, format, ...) \
{ \
	debug_printf("[ERROR:%d:%s(%s)] "format"\n", __LINE__, __FUNCTION__, __FILE__, ## __VA_ARGS__); \
}

/** @def
 * エントリートレースマクロ
 */
#define M_DEBUG_ENTRY(classId, format, ...) \
{ \
	if (classId == E_DEBUG_ENABLE) { \
		debug_printf("[ENTRY:%d:%s(%s)] "format"\n", __LINE__, __FUNCTION__, __FILE__, ## __VA_ARGS__); \
	} \
}

/** @def
 * デバッグ出力マクロ
 */
#define M_DEBUG_INFO(classId, format, ...) \
{ \
	if (classId == E_DEBUG_ENABLE) { \
		debug_printf("[INFO:%d:%s(%s)] "format"\n", __LINE__, __FUNCTION__, __FILE__, ## __VA_ARGS__); \
	} \
}

/************************************************************************************************/
/*	関数プロトタイプ宣言																		*/
/************************************************************************************************/


#endif /* __DEBUG_H__ */